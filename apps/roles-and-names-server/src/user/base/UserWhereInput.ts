/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AdoptionRequestWhereUniqueInput } from "../../adoptionRequest/base/AdoptionRequestWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { LostAndFoundReportWhereUniqueInput } from "../../lostAndFoundReport/base/LostAndFoundReportWhereUniqueInput";
import { PetWhereUniqueInput } from "../../pet/base/PetWhereUniqueInput";
import { JsonFilter } from "../../util/JsonFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: () => AdoptionRequestWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AdoptionRequestWhereUniqueInput)
  @IsOptional()
  @Field(() => AdoptionRequestWhereUniqueInput, {
    nullable: true,
  })
  adoptionRequests?: AdoptionRequestWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => LostAndFoundReportWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LostAndFoundReportWhereUniqueInput)
  @IsOptional()
  @Field(() => LostAndFoundReportWhereUniqueInput, {
    nullable: true,
  })
  lostAndFoundReports?: LostAndFoundReportWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PetWhereUniqueInput)
  @IsOptional()
  @Field(() => PetWhereUniqueInput, {
    nullable: true,
  })
  pets?: PetWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  phonenumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  profilePicture?: JsonFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;
}

export { UserWhereInput as UserWhereInput };
