/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AiMatch } from "../../aiMatch/base/AiMatch";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsDate,
  MaxLength,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { EnumLostAndFoundReportPetType } from "./EnumLostAndFoundReportPetType";
import { EnumLostAndFoundReportReportType } from "./EnumLostAndFoundReportReportType";
import { User } from "../../user/base/User";

@ObjectType()
class LostAndFoundReport {
  @ApiProperty({
    required: false,
    type: () => AiMatch,
  })
  @ValidateNested()
  @Type(() => AiMatch)
  @IsOptional()
  aiMatches?: AiMatch | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contactInfo!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  imageUrl!: JsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  petName!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumLostAndFoundReportPetType,
  })
  @IsEnum(EnumLostAndFoundReportPetType)
  @IsOptional()
  @Field(() => EnumLostAndFoundReportPetType, {
    nullable: true,
  })
  petType?: "Dog" | "Cat" | null;

  @ApiProperty({
    required: false,
    enum: EnumLostAndFoundReportReportType,
  })
  @IsEnum(EnumLostAndFoundReportReportType)
  @IsOptional()
  @Field(() => EnumLostAndFoundReportReportType, {
    nullable: true,
  })
  reportType?: "Lost" | "Found" | null;

  @ApiProperty({
    required: false,
    type: () => User,
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  reportedBy?: User | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { LostAndFoundReport as LostAndFoundReport };
