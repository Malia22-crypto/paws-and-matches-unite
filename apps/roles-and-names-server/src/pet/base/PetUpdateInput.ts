/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AdoptionRequestUpdateManyWithoutPetsInput } from "./AdoptionRequestUpdateManyWithoutPetsInput";
import {
  ValidateNested,
  IsOptional,
  IsInt,
  Min,
  Max,
  IsString,
  MaxLength,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { AiMatchWhereUniqueInput } from "../../aiMatch/base/AiMatchWhereUniqueInput";
import { EnumPetGender } from "./EnumPetGender";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { EnumPetStatus } from "./EnumPetStatus";
import { EnumPetTypeField } from "./EnumPetTypeField";

@InputType()
class PetUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AdoptionRequestUpdateManyWithoutPetsInput,
  })
  @ValidateNested()
  @Type(() => AdoptionRequestUpdateManyWithoutPetsInput)
  @IsOptional()
  @Field(() => AdoptionRequestUpdateManyWithoutPetsInput, {
    nullable: true,
  })
  adoptionRequests?: AdoptionRequestUpdateManyWithoutPetsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(1)
  @Max(30)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  age?: number | null;

  @ApiProperty({
    required: false,
    type: () => AiMatchWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AiMatchWhereUniqueInput)
  @IsOptional()
  @Field(() => AiMatchWhereUniqueInput, {
    nullable: true,
  })
  aiMatches?: AiMatchWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(100)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  breed?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumPetGender,
  })
  @IsEnum(EnumPetGender)
  @IsOptional()
  @Field(() => EnumPetGender, {
    nullable: true,
  })
  gender?: "Male" | "Female" | "Unknown" | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  imageUrl?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  owner?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    enum: EnumPetStatus,
  })
  @IsEnum(EnumPetStatus)
  @IsOptional()
  @Field(() => EnumPetStatus, {
    nullable: true,
  })
  status?: "Available" | "Adopted" | "Lost" | "Found" | null;

  @ApiProperty({
    required: false,
    enum: EnumPetTypeField,
  })
  @IsEnum(EnumPetTypeField)
  @IsOptional()
  @Field(() => EnumPetTypeField, {
    nullable: true,
  })
  typeField?: "Cat" | "Dog" | null;
}

export { PetUpdateInput as PetUpdateInput };
