/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AdoptionRequestListRelationFilter } from "../../adoptionRequest/base/AdoptionRequestListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { AiMatchWhereUniqueInput } from "../../aiMatch/base/AiMatchWhereUniqueInput";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { EnumPetGender } from "./EnumPetGender";
import { StringFilter } from "../../util/StringFilter";
import { JsonFilter } from "../../util/JsonFilter";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { EnumPetStatus } from "./EnumPetStatus";
import { EnumPetTypeField } from "./EnumPetTypeField";

@InputType()
class PetWhereInput {
  @ApiProperty({
    required: false,
    type: () => AdoptionRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AdoptionRequestListRelationFilter)
  @IsOptional()
  @Field(() => AdoptionRequestListRelationFilter, {
    nullable: true,
  })
  adoptionRequests?: AdoptionRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  age?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: () => AiMatchWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AiMatchWhereUniqueInput)
  @IsOptional()
  @Field(() => AiMatchWhereUniqueInput, {
    nullable: true,
  })
  aiMatches?: AiMatchWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  breed?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumPetGender,
  })
  @IsEnum(EnumPetGender)
  @IsOptional()
  @Field(() => EnumPetGender, {
    nullable: true,
  })
  gender?: "Male" | "Female" | "Unknown";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  imageUrl?: JsonFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  location?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  owner?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumPetStatus,
  })
  @IsEnum(EnumPetStatus)
  @IsOptional()
  @Field(() => EnumPetStatus, {
    nullable: true,
  })
  status?: "Available" | "Adopted" | "Lost" | "Found";

  @ApiProperty({
    required: false,
    enum: EnumPetTypeField,
  })
  @IsEnum(EnumPetTypeField)
  @IsOptional()
  @Field(() => EnumPetTypeField, {
    nullable: true,
  })
  typeField?: "Cat" | "Dog";
}

export { PetWhereInput as PetWhereInput };
